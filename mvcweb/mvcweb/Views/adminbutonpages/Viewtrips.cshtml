@using mvcweb.Models
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    List<jobstatus> triplist = ViewBag.triplist;
}

<head>
<meta charset="UTF-8">
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places&key=AIzaSyDlJZBW-azAXP0T5Sp0OoUkTA4KrPcT0RI">
    </script>
    <script src="https://code.jquery.com/jquery-3.6.0.js">
    </script>
    <script src="https://raw.githubusercontent.com/jiren/filter.js/master/src/filter.js" type="text/javascript">
    </script>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default">
    </script>
    <title></title>
    </head>

<div id="waitinhgpage"   >


    @if(triplist.Count == 0)
            {
                <div  class="" style="flex-direction: column; text-align:left ;  margin: 10px; padding:10px"  >
                                <p>  No trips available yet </p>                                

                     </div>
                
            }
            else
            {
                 <div class="form-group  align-items-center justify-content-center " style = " display: grid;  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); ">   
                 
                 @foreach (var person in triplist )
                { 
                
                    <div class="card" style="width: 22rem; margin:20 ;">
                        <div class="card-body">
                             <div class="map" id="map" style="width:100%;height:150px; margin:10px;"></div> 
                            <p class="card-text" style="color:green;">
                                Customer id : @person.customerid
                            </p>

                            <p class="card-text" style="color:green;">
                                Driver id : @person.driverid
                            </p>
                            

                            <p class="card-text" style="color:green;">
                                Is job completed : @person.isJobdone
                            </p>
                            <p class="card-text" style="color:green;">
                                Amount : @person.amountPayable
                            </p>
                            <p class="card-text" style="color:green;">
                                Vehicle type  : @person.vehicleType
                            </p>
                            <p class="card-text" style="color:green;">
                                Feedback rate for driver  : @person.feedbackRatefordriver
                            </p>
                            <p class="card-text" style="color:green;">
                                Feedback rate for customer : @person.feedbackrateforcustomer
                            </p>

                            <p class="card-text" style="color:green;">
                                Feedback for customer  : @person.feedbackforcustomer
                            </p>
                            <p class="card-text" style="color:green;">
                                Feedback for driver  : @person.feedbackfordriver
                            </p>
                            <p class="card-text" style="color:green;">
                                Date time : @person.dateTime
                            </p>
                          

                        </div>
                        <div class="card-footer text-center">
                             
                        </div>
                    </div>

                    <div id="customerFrom" style="visibility:hidden;">@person.customerFrom</div>
                    <div id="customerTo" style="visibility:hidden;">@person.customerTo</div>
                   


                    <script>

                        var fromplace = document.getElementById("customerFrom").innerHTML  ;
                        var toplace = document.getElementById("customerTo").innerHTML  ;
                        console.log( fromplace.split(","));
                        console.log( toplace.split(","));




                            $(document).ready(function() {
                                success();
                                function success(){
	                               var places = [ {
                                    "id": 1,
                                    "name": "Ending place",
                                    "coordinate": {
                                        "latitude":  toplace.split(",")[0] ,
                                        "longitude": toplace.split(",")[1]  
                                    },
                                    "description": "Ending place",
                                    "is_active": true
                                },{
                                    "id": 2,
                                    "name": "Starting place",
                                    "coordinate": {
                                        "latitude": fromplace.split(",")[0] ,
                                        "longitude": fromplace.split(",")[1]  
                                    },
                                    "description": "Starting place",
                                    "is_active": true
                                }]
                                // EXECUTE FUNCTIONS:
                                var place = places[0];
                                GoogleMap.init(place.coordinate.latitude, place.coordinate.longitude, places);
                                var afterFilter = function(result) {
                                    $('#total_places').text(result.length);
                                    GoogleMap.updateMarkers(result);
                                }
                                }

                            });
                            // BUILD FILTERS:
                            // BUILD GOOGLE MAPS:
                            var GoogleMap = {
                                map: null,
                                markers: {},
                                init: function(lat, lng, places) {
                                    var self = this;
                                    var mapOptions = {
                                        zoom: 12,
                                        center: new google.maps.LatLng(lat, lng)
                                    };
                                    this.map = new google.maps.Map(document.getElementById('map'), mapOptions);
                                    this.infowindow = new google.maps.InfoWindow({
                                        size: new google.maps.Size(50, 50)
                                    });
                                                                        
                                    $.each(places, function() {
                                        self.addMarker(this);
                                    });
                                    this.setCenterPoint();
                                },
                                // Create map markers
                                addMarker: function(place) {
                                    var self = this;
                                    var marker = new google.maps.Marker({
                                        position: new google.maps.LatLng(place.coordinate.latitude, place.coordinate.longitude),
                                        map: self.map,
                                        title: place.name,
                                        icon: place.image
                                    });
                                    console.log(place);
                                    // Create information event for each marker
                                    marker.info_window_content = 'TEST'
                                    self.markers[place.id] = marker
                                    google.maps.event.addListener(marker, 'dragend' , function() {
                                        self.map.setCenter(marker.getPosition());
	                                console.log("heehee");
	                                console.log(marker.getPosition().lat()  );
                           
                                    });
                                },
                                // Update map markers
                                updateMarkers: function(records) {
                                    var self = this;
                                    $.each(self.markers, function() {
                                        this.setMap(null);
                                    })
                                    $.each(records, function() {
                                        self.markers[this.id].setMap(self.map);
                                    });
                                    //Set map center
                                    if (records.length) self.setCenterPoint();
                                },
                                // Set centre point for map
                                setCenterPoint: function() {
                                    var lat = 0,
                                        lng = 0;
                                    count = 0;
                                    //Calculate approximate center point based on number of JSON entries
                                    for (id in this.markers) {
                                        var m = this.markers[id];
                                        if (m.map) {
                                            lat += m.getPosition().lat();
                                            lng += m.getPosition().lng();
                                            count++;
                                        }
                                    }
                                    if (count > 0) {
                                        this.map.setCenter(new google.maps.LatLng(lat / count, lng / count));
                                    }
                                }
                            };
                            // CHANGE MAP FOCUS:
                            function showCompany(lat, lng) {
                                var position = new google.maps.LatLng(lat, lng);
                                map.setCenter(position);
                                alert(lat, lng);
                            }
                            
             

                    </script>


                }



                 

             </div>
       

            }
            
        

    
</div>



<script>
        var Height = window.innerHeight ;
        Height = Height-200 ;
        
        document.getElementById('waitinhgpage').style.minHeight=Height+"px" ;  
</script>
